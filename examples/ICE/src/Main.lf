target Python{
    fast: True,
    timeout: 30s
}

import Cell5 from "Cell5.lf" 
import Warehouse from "Warehouse.lf"
import Kairos from "Kairos.lf"
import CommonBus from "../../../glacier/src/CommonBus.lf"
import Tester from "Tester.lf"

preamble{=
    from machine_data_model.protocols.glacier_v1.glacier_message import GlacierMessage, GlacierSpecialMessage
    from machine_data_model.protocols.glacier_v1.glacier_header import * 
    from machine_data_model.protocols.glacier_v1.glacier_payload import *
    from machine_data_model.protocols.glacier_v1.glacier_protocol_mng import GlacierProtocolMng
    from machine_data_model.builder.data_model_builder import DataModelBuilder
    from machine_data_model.protocols.protocol_mng import Message
    from machine_data_model.nodes.method_node import *
    import uuid
=}


main reactor{

    quality = new Cell5(model_path = "models/Cell5.yml")
    warehouse = new Warehouse(model_path = "models/Warehouse.yml")
    kairos_aa = new Kairos(model_path = "models/RBKairos.yml")
    bus = new CommonBus(width = 4)
    tester = new Tester()
    quality.channel_out, warehouse.channel_out, tester.channel_out, kairos_aa.channel_out -> bus.machine_in after 1 msec
    bus.machine_out -> quality.channel_in, warehouse.channel_in, tester.channel_in, kairos_aa.channel_in after 1 msec
    
}