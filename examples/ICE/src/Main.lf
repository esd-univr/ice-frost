target Python{
    fast: True
}

import Cell5 from "Cell5.lf" 
import Warehouse from "Warehouse.lf"
import Kairos from "Kairos.lf"
import CommonBus from "../../../glacier/src/CommonBus.lf"
import Tester from "Tester.lf"

preamble{=
    from machine_data_model.protocols.glacier_v1.glacier_message import GlacierMessage, GlacierSpecialMessage
    from machine_data_model.protocols.glacier_v1.glacier_header import * 
    from machine_data_model.protocols.glacier_v1.glacier_payload import *
    from machine_data_model.protocols.glacier_v1.glacier_protocol_mng import GlacierProtocolMng
    from machine_data_model.builder.data_model_builder import DataModelBuilder
    from machine_data_model.protocols.protocol_mng import Message
    from machine_data_model.nodes.method_node import *
    import uuid
=}

reactor example{
    input ins

    reaction(ins){=
        print(f"ins Time elapsed{lf.time.logical_elapsed()}, {lf.tag().microstep}, {ins.value}")
    =}


}

main reactor{

    quality = new Cell5(model_path = "models/Cell5.yml")
    warehouse = new Warehouse(model_path = "models/Warehouse.yml")
    kairos_aa = new Kairos(model_path = "models/RBKairos.yml")
    bus = new CommonBus(width = 4)
    tester = new Tester()
    quality.channel_out, warehouse.channel_out, tester.channel_out, kairos_aa.channel_out -> bus.machine_in after 1 msec
    bus.machine_out -> quality.channel_in, warehouse.channel_in, tester.channel_in, kairos_aa.channel_in after 1 msec
    
    '''logical action a1
    logical action a2
    logical action a3
    ex = new example()
    reaction(startup)-> a1 ,a2{=
        a1.schedule(SEC(1))
        a2.schedule(SEC(1))
    =}

    reaction (a1)->a3{=
        print(f"a1 Time elapsed{lf.time.logical_elapsed()}, {lf.tag().microstep}")
        a3.schedule(SEC(1), [1])
    =}

    reaction (a2)->a3{=
        print(f"a2 Time elapsed{lf.time.logical_elapsed()}, {lf.tag().microstep}")
        a3.schedule(SEC(1), [2])
    =}

    reaction (a3)->ex.ins{=
        print(f"a3 Time elapsed{lf.time.logical_elapsed()}, {lf.tag().microstep}, {a3.value}")
        ex.ins.set(a3.value)
    =}'''

}