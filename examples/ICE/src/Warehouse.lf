target Python

import Machine from "../../../glacier/src/machine.lf"

reactor Warehouse extends Machine{

    preamble{=
        from machine_data_model.builder.data_model_builder import DataModelBuilder
        from machine_data_model.protocols.glacier_v1.glacier_message import GlacierMessage
        from machine_data_model.protocols.glacier_v1.glacier_protocol_mng import GlacierProtocolMng
        from machine_data_model.protocols.glacier_v1.glacier_payload import MethodPayload
    =}
    
    reaction(IN) -> OUT{=
        message = IN.value
        if message.target == "Warehouse":
            mex_out = self.protocol_manager.handle_message(message)
            if isinstance(message.payload, self.MethodPayload):
                self.UpdateStatistics(mex_out.payload.ret)
            OUT.set(mex_out)
    =}

    reaction(startup)-> delay{=
        self.data_model = self.DataModelBuilder().get_data_model(self.path)
        self.protocol_manager = self.GlacierProtocolMng(self.data_model)
    =}

}
