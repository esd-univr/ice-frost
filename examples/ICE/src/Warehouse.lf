target Python

import Model from "../../../glacier/src/Model.lf"


reactor Warehouse extends Model{
    
    //Extract and send back need COMPOSITE
    state extract_tray = {= self.data_model.get_node("Warehouse/SocketLink/extractTray") =}
    state send_back_tray = {= self.data_model.get_node("Warehouse/SocketLink/sendBackTray") =}
    state show_message = {= self.data_model.get_node("Warehouse/showMessage") =}

    state warehouse_info = {= self.data_model.get_node("Warehouse/Status/warehouseInfo") =}
    state bay_info = {= self.data_model.get_node("Warehouse/Status/bayInfo") =}
    state tray_in_bay = {= self.data_model.get_node("Warehouse/Status/trayInBay") =}
    state bay_queue_size = {= self.data_model.get_node("Warehouse/Status/bayQueueSize") =}
    state bay_busy = {= self.data_model.get_node("Warehouse/Status/bayBusy") =}
    state bay_ready_for_pickplace = {= self.data_model.get_node("Warehouse/Status/bayReadyForPickPlace") =}
    state tray_calls_count = {= self.data_model.get_node("Warehouse/Statistics/TrayCallsCount") =}
    
    reaction(startup){=
        self.extract_tray.callback = self.extract_Tray
        self.send_back_tray.callback = self.sendback_Tray    
        self.show_message.callback = self.show_Message
    =}

    method extract_Tray(TrayNumber){=
        self.tray_in_bay.update(TrayNumber)
        self.tray_calls_count.update(self.tray_calls_count.read() + 1)  
        self.bay_busy.update(True)
        self.bay_ready_for_pickplace.update(True)
        return TrayNumber
    =}

    method sendback_Tray(TrayNumber){=
        self.tray_in_bay.update(0)
        self.bay_busy.update(False)
        self.bay_ready_for_pickplace.update(False)
        return TrayNumber
    =}

    method show_Message(message){=
        print(message)
    =}    

}
